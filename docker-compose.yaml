version: "3.9"

networks: 
  aycvpnnet: 
    driver: bridge

services:

  aycvpn:
    container_name: aycvpn
    scale: 1
    image: dperson/openvpn-client:latest
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 0
      net.ipv4.conf.all.forwarding: 1
      net.ipv6.conf.all.forwarding: 1
    cap_add:
      - net_admin # required to modify network interfaces
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z # tun device
      - ./vpn:/vpn # OpenVPN configuration
    security_opt:
      - label:disable
    ports:
      - 9101:80 # rpi proxy
      - 8080:8080 # cadvisor
    networks:
      - aycvpnnet
    command: '-f "" -d -r 192.168.0.0/24' # enable firewall and route local network traffic

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    network_mode: service:aycvpn # run on the vpn network

  nginx:
    container_name: nginx
    scale: 1
    image: nginx:latest
    restart: unless-stopped    
    volumes:
      - ./nginx:/etc/nginx # config files
    network_mode: service:aycvpn # run on the vpn network

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.systemd'
      - '--collector.processes'
    restart: unless-stopped
    network_mode: host

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/config:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - cadvisor
    restart: unless-stopped
    network_mode: host

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    network_mode: host

  grafana:
    container_name: grafana
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config:/etc/grafana/
    restart: unless-stopped
    network_mode: host